{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://quicksearch-estates-frontend/./src/index.js"],"sourcesContent":["// Function to handle user registration\nasync function signUp(username, email, password) {\n    try {\n        const response = await fetch('/api/signup', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ username, email, password })\n        });\n\n        if (response.ok) {\n            const userData = await response.json();\n            console.log('User signed up successfully:', userData);\n            return userData;\n        } else {\n            const errorMessage = await response.text();\n            throw new Error(errorMessage);\n        }\n    } catch (error) {\n        console.error('Error signing up:', error.message);\n        throw error;\n    }\n}\n\n// Function to list a property by a seller\nasync function listProperty(propertyData) {\n    try {\n        const response = await fetch('/api/properties/list', {\n            method: 'POST',\n            body: propertyData\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to list property. Please try again.');\n        }\n\n        const responseData = await response.json();\n        console.log('Property listed successfully:', responseData);\n    } catch (error) {\n        console.error('Error listing property:', error.message);\n    }\n}\n\n// Function to search properties with filters\nasync function searchPropertiesWithFilters(filters) {\n    try {\n        const response = await fetch('/api/properties/search', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(filters)\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to search properties. Please try again.');\n        }\n\n        const properties = await response.json();\n        displaySearchResults(properties);\n        displayPropertiesOnMap(properties);\n    } catch (error) {\n        console.error('Error searching properties:', error.message);\n    }\n}\n\n// Function to save a property as a favorite for a user\nasync function saveFavoriteProperty(userId, propertyId) {\n    try {\n        const response = await fetch(`/api/users/${userId}/favorites`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ propertyId })\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to save property as favorite. Please try again.');\n        }\n\n        console.log('Property saved as favorite successfully.');\n    } catch (error) {\n        console.error('Error saving property as favorite:', error.message);\n    }\n}\n\n// Event listener for user registration form submission\ndocument.getElementById('signUpForm').addEventListener('submit', async function(event) {\n    event.preventDefault(); // Prevent default form submission behavior\n    const username = document.getElementById('username').value;\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    await signUp(username, email, password);\n});\n\n// Event listener for property listing form submission (for sellers)\ndocument.getElementById('listPropertyForm').addEventListener('submit', async function(event) {\n    event.preventDefault(); // Prevent default form submission behavior\n    const propertyData = new FormData(this);\n    await listProperty(propertyData);\n});\n\n// Event listener for property search form submission (for buyers)\ndocument.getElementById('propertySearchForm').addEventListener('submit', async function(event) {\n    event.preventDefault(); // Prevent default form submission behavior\n    const searchFilters = {}; // Implement logic to collect search filters from the form\n    await searchPropertiesWithFilters(searchFilters);\n});\n\n// Event listener for saving a property as favorite\ndocument.getElementById('saveFavoriteBtn').addEventListener('click', async function(event) {\n    event.preventDefault(); // Prevent default link behavior\n    const userId = 'user123'; // Replace with the logged-in user's ID\n    const propertyId = 'property456'; // Replace with the ID of the property to save\n    await saveFavoriteProperty(userId, propertyId);\n});\n\n"],"names":["signUp","username","email","password","response","fetch","method","headers","body","JSON","stringify","ok","userData","json","console","log","errorMessage","text","Error","error","message","listProperty","propertyData","responseData","searchPropertiesWithFilters","filters","properties","displaySearchResults","displayPropertiesOnMap","saveFavoriteProperty","userId","propertyId","document","getElementById","addEventListener","event","preventDefault","value","FormData","searchFilters"],"sourceRoot":""}